# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#       - name: ls -a via ssh
#         uses: garygrossgarten/github-action-ssh@release
#         with:
#           command: ls -a
#           host: ${{ secrets.HOST }}
#           username: root
#           port: 22
#           privateKey: ${{ secrets.PRIVATE_KEY}}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17' #Set up the Java environment to version 17
          distribution: 'adopt'
          
#       - uses: shogo82148/actions-setup-mysql@v1
#         with:
#           mysql-version: '8.0'
#           root-password: ${{ secrets.DATABASEPASSWORD }}
#       - run: |
#           mysql -uroot -p${{ secrets.DATABASEPASSWORD }} -h127.0.0.1 -e 'CREATE database project1'
#           mysql –uroot -p${{ secrets.DATABASEPASSWORD }} -h127.0.0.1 -e 'show databases'
#           mysql –uroot -p${{ secrets.DATABASEPASSWORD }} -h127.0.0.1 -Dproject1<./src/main/resources/sql/base.sql
          
      - uses: mirromutth/mysql-action@v1.1
        with:
#           host port: 3800 # Optional, default value is 3306. The port of host
#           container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'project1' # Optional, default value is "test". The specified database which will be create
          mysql root password: ${{ secrets.DATABASEPASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
#           mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
#           mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
      - name: Init Database
        run: |
          mysql –uroot -p${{ secrets.DATABASEPASSWORD }} -h127.0.0.1 -e 'show databases'
          mysql –uroot -p${{ secrets.DATABASEPASSWORD }} -h127.0.0.1 -Dproject1<./src/main/resources/sql/base.sql

      - name: Build Platform
        run: mvn --batch-mode -DskipTests package #building the application, but skipping the tests

      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=false test #defer the response to failed tests to the test processing action

      # Runs a single command using the runners shell
#       - name: Packing platform
#         run: |
#           cd target
#           ls
        
      - name: transit jar file to server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
#           ARGS: "-rltgoDzvO"
          SOURCE: "target/project1-0.0.1-SNAPSHOT.jar"
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /root/project-1/dockerfiles/platform/project1.jar  #注意这里
#           EXCLUDE: "/dist/, /node_modules/"

      - name: deploy platform
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd /root/project-1/dockerfiles/platform
            docker build -t project1:1.0.1 .
            kubectl delete pod $(kubectl get pod -n project1 | grep platform | awk '{print $1}') -n project1
          host: ${{ secrets.HOST }}
          username: root
          port: 22
          privateKey: ${{ secrets.PRIVATE_KEY}}


      # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
